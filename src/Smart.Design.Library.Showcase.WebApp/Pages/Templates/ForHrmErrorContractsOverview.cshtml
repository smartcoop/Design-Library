@page
@model Smart.Design.Library.Showcase.Pages.Templates.ForHrmErrorContractsOverviewModel
@using Kendo.Mvc.TagHelpers
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "ForHrm Error Contracts Overview";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()

<div class="c-app-layout">
    @await Html.PartialAsync("Shared/_TemplatesHeader")
    <main class="u-maximize-width">
        <div class="c-app-layout-inner">
            @await Html.PartialAsync("Shared/_TemplatesSideMenu")
            <div class="c-app-layout-inner__content">
                @await Html.PartialAsync("Shared/_TemplatesMainTitle")
                <div class="o-container o-container--large">
                    <div class="o-container-vertical--padding-mini u-position-relative">
                        <form asp-page-handler="GetErrors" method="post">
                            <!-- Form Content Here -->
                            @* <span class="u-spacer-left-xl">
                                @(Html.Kendo().Button()
                                    .Name("getErrorsBtn")
                                    .ThemeColor(ThemeColor.Primary)
                                    .Content("Get Errors")
                                    .HtmlAttributes(new { type = "submit" })
                                    .Events(e => e.Click("forgeryToken"))
                                    )
                            </span> *@
                        </form>
                    </div>
                    <div class="u-position-relative">
                        <h3 class="c-panel__title">Queue Errors</h3>
                        <!-- Kendo Grid -->
                        @(Html.Kendo().Grid<ErrorQueue>()
                            .Name("errorQueueGrid")
                            .Columns(columns =>
                            {
                                columns.Bound(e => e.refPrest).Title("Reference");
                                columns.Bound(e => e.firstDate).Title("First Date").Format("{0:dd/MM/yyyy}");
                                columns.Bound(e => e.eSMartBEEntityName).Title("Entity");
                                columns.Bound(e => e.eStatusName).Title("Status");
                                columns.Bound(e => e.errorMessage).Title("Error Message");
                            })
                            .Pageable()
                            .Sortable()
                            .Filterable()
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(10)
                            .Read(read => read.Url("/Templates/ForHrmErrorContractsOverview?handler=ReadErrorQueue").Data("forgeryToken"))
                            )
                            )
                    </div>

                    <div class="u-position-relative">
                        <h3 class="c-panel__title">Activity / Hours ForHrm</h3>
                        @(Html.Kendo().Grid<ProcessedActivity>()
                            .Name("processedActivityGrid")
                            .Columns(columns =>
                            {
                                columns.Bound(a => a.Date).Title("Date").Format("{0:dd/MM/yyyy HH:mm}");
                                columns.Bound(a => a.NumberOfSuccessfullyProcessed).Title("Nbr of CTR Successfully processed");
                               
                            })
                            .Pageable()
                            .Sortable()
                            .Filterable()
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(10)
                            .Read(read => read.Url("/Templates/ForHrmErrorContractsOverview?handler=ReadProcessedActivity").Data("forgeryToken"))
                            )
                            )
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>



<script>
   

    function forgeryToken() {
        return kendo.antiForgeryTokens();
    }

</script>
